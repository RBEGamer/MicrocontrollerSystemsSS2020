; MCS 2020 LED Teil 2


.AREA	Memory (abs)
STACK	=	$1000		; Nach RESET $1000, nach SetUp $2000=(End of RAM)+1
SetUp	=	$F800		; Suboutine System SetUp
Warte1ms=	SetUp+9


PORTB	=	$0001
PORTS	=	$0248
DDRS	=	$024A

BIT0    =   0b00000001
BIT1    =   0b00000010
BIT2    =   0b00000100
BIT3    =   0b00001000

ANZAHL_PHASEN = 4; PHASENZAHL-1  FÜR ADDRESSE

;PHASE_A = 0b01010000 ; PHASE_A BITMUSTER LED 0001
;PHASE_B = 0b10100000 ; PHASE_B BITMUSTER LED 0010
;PHASE_C = 0b10010000 ; PHASE_C BITMUSTER LED 0100
;PHASE_D = 0b01100000 ; PHASE_D BITMUSTER LED 1000


DELAY = 500 ;PAUSE ZWISCHEN DEN PHASEN

	.ORG	$1000		; Variablen ab 0x1000
	


	.ORG    $4000		; Program Code ab 0x4000
	



START:	LDS	#STACK		; Setzen Stackpointer
		JSR	SetUp			; System SetUp
		
		
INIT:	MOVB	#0b11110000,DDRS; 	  ; SETUP PORT DDRS
		LDY #ANZAHL_PHASEN			  ;LADE COUNTER MIT ANZAHL PHASEN
		LDAB #0						  ;RESET PARTS
		STB PORTS
		  


MAIN: 	  		JMP CHECK_BTN

CHECK_BTN:		LDAB PORTB		 ; LESE PORT B EIN
				COMB 			 ;INVERTIERE B
				ANDB	#0b00000001 ;MASKE AUFS ERSTE BIT
				BNE	MAIN ;WENN GESETZT WIEDER AUF MAIN ZURUECK

DISPLAY:		LDAB LED_PHASEN,Y 					;HOLE BITMUSTER DER PHASE MIT OFFSET
				STB PORTS		  					;WRITE OUTPUT AND WAIT
				BSR WDELAY		  		 		 	;WAIT DELAY
	  		;	JMP MAIN	
						
				DEY
				BEQ RESET_COUNTER	   				; WENN Y NICHT NEGATIV IST 0-3 -> DISPLAY
				JMP MAIN
													

				
RESET_COUNTER:	LDY	#ANZAHL_PHASEN
				JMP MAIN
				
		
WDELAY:	LDX	#DELAY  		; SPEICHERE DELAY WERT IN X
WLOOP:	JSR	Warte1ms		; CALL Warte1ms
	DBNE	X,WLOOP			; WENN X != 0 GEHE ZU WLOOP
	RTS						; RETURN
	
LED_PHASEN: .DB -1,0b01100000,0b10010000,0b10100000,0b01010000 ; HIER DIE PHASEN 
 
; **********************************************************************************

	.ORG	$FFFE
	.DW	START		; RESTART Vektor
